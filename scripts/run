#!/bin/bash
GRAFANA_VERSION=v8.2.1
PROMETHEUS_VERSION=v2.30.3

SITE_ROOT=$(realpath $(dirname $(realpath $0))/..)
ASDF=$SITE_ROOT/bin/.asdf/installs
GRAFANA_DIR=$ASDF/grafana/$GRAFANA_VERSION
PROMETHEUS_DIR=$ASDF/prometheus/$PROMETHEUS_VERSION

export HOME=/tmp
cd $SITE_ROOT
#source $SITE_ROOT/.env
git="git -C $SITE_ROOT"
type="stat"
mbr_cli="/massbit/massbitroute/app/src/sites/services/$type/mbr"
script_run="/massbit/massbitroute/app/src/sites/services/$type/scripts/run"
cmd="/massbit/massbitroute/app/src/sites/services/$type/cmd_server"
nginx="$cmd nginx"
_git_config() {
	$git config --global user.name "Vu Tran"
	$git config --global user.email "baysao@gmail.com"
}
_reload() {
	$nginx -s reload
	curl -X POST http://127.0.0.1:44448/__internal_prometheus/-/reload
	curl -X POST http://127.0.0.1:44449/__internal_prometheus/-/reload
}

_service_grafana() {
	mkdir -p $SITE_ROOT/data/grafana
	# val=$(echo $SITE_ROOT | sed 's/\//\\\//g')
	# sed "s/_SITE_ROOT_/$val/g" $SITE_ROOT/etc/grafana/stat_tmpl.ini >$SITE_ROOT/etc/grafana/stat.ini

	exec $GRAFANA_DIR/bin/grafana-server -config $SITE_ROOT/etc/grafana/stat.ini -homepath $GRAFANA_DIR
}

# service config for Prometheus Node
_service_prometheus_node() {
	mkdir -p $SITE_ROOT/data/prometheus_node
	# ASDF=$SITE_ROOT/bin/.asdf/installs
	# PROMETHEUS_DIR=$ASDF/prometheus/$PROMETHEUS_VERSION
	exec $PROMETHEUS_DIR/bin/prometheus --web.enable-admin-api --config.file=$SITE_ROOT/etc/prometheus/stat_node.yml --web.listen-address="127.0.0.1:44448" --web.external-url http://127.0.0.1:44448/__internal_prometheus_node --web.enable-lifecycle --storage.tsdb.path $SITE_ROOT/data/prometheus_node
}

# service config for Prometheus Gateway
_service_prometheus_gw() {
	mkdir -p $SITE_ROOT/data/prometheus_gw
	# ASDF=$SITE_ROOT/bin/.asdf/installs
	# PROMETHEUS_DIR=$ASDF/prometheus/$PROMETHEUS_VERSION
	exec $PROMETHEUS_DIR/bin/prometheus --web.enable-admin-api --config.file=$SITE_ROOT/etc/prometheus/stat_gw.yml --web.listen-address="127.0.0.1:44449" --web.external-url http://127.0.0.1:44449/__internal_prometheus_gw --web.enable-lifecycle --storage.tsdb.path $SITE_ROOT/data/prometheus_gw
}

loop() {
	while true; do
		$0 $@
		sleep 10
	done
}
_monitor() {
	is_reload=0
	# id=$(cat $SITE_ROOT/vars/ID)
	# curl -sSfL $MBR_API/deploy/$type/${id}.conf -o http.d/${id}.conf.new
	# diff http.d/${id}.conf http.d/${id}.conf.new
	# if [ $? -ne 0 ]; then
	# 	mv http.d/${id}.conf.new http.d/${id}.conf
	# 	is_reload=1
	# fi
	$git pull | grep -i "updating"
	if [ $? -eq 0 ]; then
		is_reload=1
	fi
	if [ $is_reload -ne 0 ]; then
		$0 _reload
	fi
	# $mbr_cli $type ping
}

_run() {
	$SITE_ROOT/start_server
}

$@
