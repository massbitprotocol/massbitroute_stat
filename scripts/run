#!/bin/bash
TYPE="stat"

SITE_ROOT=$(realpath $(dirname $(realpath $0))/..)

export HOME=$SITE_ROOT

if [ -e "$SITE_ROOT/cmd_server" ]; then bash $SITE_ROOT/cmd_server _env; fi
if [ -f "$SITE_ROOT/.env_raw" ]; then source $SITE_ROOT/.env_raw; fi
source $SITE_ROOT/scripts/base.sh

cd $SITE_ROOT

mbr_root=/massbit/massbitroute/app
service_dir=$mbr_root/src/sites/services

GRAFANA_VERSION=v8.2.1
PROMETHEUS_VERSION=v2.30.3
ASDF=$SITE_ROOT/bin/.asdf/installs
GRAFANA_DIR=$ASDF/grafana/$GRAFANA_VERSION
PROMETHEUS_DIR=$ASDF/prometheus/$PROMETHEUS_VERSION

export MBR_ENV=${MBR_ENV:-dev}
export BRANCH=${BRANCH:-dev}
export MBRAPP_BRANCH=${MBRAPP_BRANCH:-dev}
export ASDF_BRANCH=${ASDF_BRANCH:-dev}
export SSL_BRANCH=${SSL_BRANCH:-dev}
export GWMAN_BRANCH=${GWMAN_BRANCH:-dev}
export NODE_BRANCH=${NODE_BRANCH:-dev}
export GATEWAY_BRANCH=${GATEWAY_BRANCH:-dev}
export STAT_BRANCH=${STAT_BRANCH:-dev}
export MONITOR_BRANCH=${MONITOR_BRANCH:-dev}
export API_BRANCH=${API_BRANCH:-dev}
export SESSION_BRANCH=${SESSION_BRANCH:-dev}
export GIT_BRANCH=${GIT_BRANCH:-dev}
export MKAGENT_BRANCH=${MKAGENT_BRANCH:-dev}

_repo() {
	REPOS="\
$SITE_ROOT/env|$GIT_PRIVATE_READ_URL/massbitroute/env.git|$MBR_ENV \
/etc/letsencrypt|$GIT_PRIVATE_READ_URL/massbitroute/ssl.git|$SSL_BRANCH \
 $mbr_root/gbc|https://github.com/massbitprotocol/massbitroute_gbc|$GBC_BRANCH \
 $mbr_root/gbc/bin/.asdf|https://github.com/massbitprotocol/massbitroute_asdf|$ASDF_BRANCH \
  $service_dir/stat|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_stat.git|$STAT_BRANCH \
  $service_dir/stat/etc/conf|https://$GIT_STATDEPLOY_WRITE@$GIT_PRIVATE_DOMAIN/massbitroute/statdeploy.git|$STAT_BRANCH \
  $service_dir/mkagent|$GIT_PUBLIC_URL/massbitprotocol/massbitroute_mkagent.git|$MKAGENT_BRANCH \
"
}
_repo

_prepare() {
	echo "Prepare"
	mkdir -p \
		$SITE_ROOT/logs/nginx \
		$SITE_ROOT/db \
		$SITE_ROOT/tmp \
		$SITE_ROOT/db \
		$SITE_ROOT/etc/prometheus/stat_gw \
		$SITE_ROOT/etc/prometheus/stat_node
	# rm -rf $SITE_ROOT/tmp/*

	if [ ! -f "/usr/bin/parallel" ]; then
		apt update
		apt install -y parallel
	fi

}

_install_repos() {
	_git_config
	_repo
	for _pathgit in $REPOS; do
		_path=$(echo $_pathgit | cut -d'|' -f1)
		_url=$(echo $_pathgit | cut -d'|' -f2)
		_branch=$(echo $_pathgit | cut -d'|' -f3)
		_git_clone $_url $_path $_branch
	done
}
_init() {
	if [ -z "$GIT_PRIVATE_READ_URL" ]; then
		echo "Need GIT_PRIVATE_READ_URL"
		exit 1
	fi
	# _tune_os
	if [ ! -f "$SITE_ROOT/.env" ]; then
		echo "$MBR_ENV" >$SITE_ROOT/.env
	fi

	source $SITE_ROOT/.env

	_git_clone $GIT_PRIVATE_READ_URL/massbitroute/env.git /massbit/massbitroute/app/src/env $MBR_ENV
	_git_clone $GIT_PUBLIC_URL/massbitprotocol/massbitroute_gbc.git /massbit/massbitroute/app/gbc
	bash $SITE_ROOT/cmd_server _env
	source $SITE_ROOT/.env_raw
	_repo
}
_supervisor() {
	ln -sf /massbit/massbitroute/app/gbc /massbit/massbitroute/app/src/gbc
	ln -sf /massbit/massbitroute/app/gbc/bin/openresty /usr/local/openresty
	apt-get update
	apt-get install -y git apache2-utils supervisor jq python-is-python2 libssl-dev \
		liburcu-dev libev-dev libsodium-dev libtool libunwind-dev libmaxminddb-dev

	systemctl enable supervisor
	systemctl start supervisor

	mkdir -p /etc/supervisor/conf.d
	cp supervisor.conf /etc/supervisor/conf.d/${TYPE}.conf
	supervisorctl update
}
_install_one() {
	_init
	_prepare
	_install_repos
}
_install() {
	_install_one
	_supervisor
}

_service_grafana() {
	mkdir -p $SITE_ROOT/data/grafana
	exec $GRAFANA_DIR/bin/grafana-server -config $SITE_ROOT/etc/grafana/stat.ini -homepath $GRAFANA_DIR
}

# service config for Prometheus Node
_service_prometheus_node() {
	mkdir -p $SITE_ROOT/data/prometheus_node
	exec $PROMETHEUS_DIR/bin/prometheus --web.enable-admin-api --config.file=$SITE_ROOT/etc/prometheus/stat_node.yml --web.listen-address="127.0.0.1:44448" --web.external-url http://127.0.0.1:44448/__internal_prometheus_node --web.enable-lifecycle --storage.tsdb.path $SITE_ROOT/data/prometheus_node
}

# service config for Prometheus Gateway
_service_prometheus_gw() {
	mkdir -p $SITE_ROOT/data/prometheus_gw
	exec $PROMETHEUS_DIR/bin/prometheus --web.enable-admin-api --config.file=$SITE_ROOT/etc/prometheus/stat_gw.yml --web.listen-address="127.0.0.1:44449" --web.external-url http://127.0.0.1:44449/__internal_prometheus_gw --web.enable-lifecycle --storage.tsdb.path $SITE_ROOT/data/prometheus_gw
}

_service_prometheus_gw_v1() {

	_type=gw
	mkdir -p $SITE_ROOT/data/prometheus/stat_${_type} $SITE_ROOT/data/run/conf/
	_p=44200
	find $SITE_ROOT/etc/prometheus/stat_${_type} -type f -iname '*.yml' | while read f; do
		_t=$(basename $f .yml)
		_url=127.0.0.1:${_p}
		_data_dir=$SITE_ROOT/data/prometheus/stat_${_type}/$_t
		cat >$SITE_ROOT/data/run/conf/${_type}_${_t}.conf <<EOF
    location /__internal_prometheus_${_type}_${_t}/ {
        # limit_except GET {
        #     deny all;
        # }
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$remote_addr;
        proxy_set_header X-Forwarded-Host \$remote_addr;
        proxy_pass_request_headers on;
        proxy_pass http://${_url}/__internal_prometheus_${_type}_${_t}/;
    }
EOF
		mkdir -p $_data_dir
		echo $PROMETHEUS_DIR/bin/prometheus --web.enable-admin-api --config.file=$f --web.listen-address="${_url}" --web.external-url http://${_url}/__internal_prometheus_${_type}_${_t} --web.enable-lifecycle --storage.tsdb.path $_data_dir
		_p=$((_p + 1))
	done >$SITE_ROOT/data/run/stat_${_type}.sh
	cat $SITE_ROOT/data/run/stat_${_type}.sh | parallel -j$(wc -l $SITE_ROOT/data/run/stat_${_type}.sh | cut -d' ' -f1)
	cd $SITE_ROOT
}

_service_prometheus_node_v1() {

	_type=node
	mkdir -p $SITE_ROOT/data/prometheus/stat_${_type} $SITE_ROOT/data/run/conf
	_p=44100
	find $SITE_ROOT/etc/prometheus/stat_${_type} -type f -iname '*.yml' | while read f; do
		_t=$(basename $f .yml)
		_url=127.0.0.1:${_p}
		_data_dir=$SITE_ROOT/data/prometheus/stat_${_type}/$_t
		cat >$SITE_ROOT/data/run/conf/${_type}_${_t}.conf <<EOF
    location /__internal_prometheus_${_type}_${_t}/ {
        # limit_except GET {
        #     deny all;
        # }
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$remote_addr;
        proxy_set_header X-Forwarded-Host \$remote_addr;
        proxy_pass_request_headers on;
        proxy_pass http://${_url}/__internal_prometheus_${_type}_${_t}/;
    }
EOF
		mkdir -p $_data_dir
		echo $PROMETHEUS_DIR/bin/prometheus --web.enable-admin-api --config.file=$f --web.listen-address="${_url}" --web.external-url http://${_url}/__internal_prometheus_${_type}_${_t} --web.enable-lifecycle --storage.tsdb.path $_data_dir
		_p=$((_p + 1))
	done >$SITE_ROOT/data/run/stat_${_type}.sh
	cat $SITE_ROOT/data/run/stat_${_type}.sh | parallel -j$(wc -l $SITE_ROOT/data/run/stat_${_type}.sh | cut -d' ' -f1)
	cd $SITE_ROOT
}

# _update_listid_gw() {
# 	_dir=$SITE_ROOT/etc/prometheus
# 	mkdir -p $_dir/stat_gw
# 	tmpd=$(mktemp -d)
# 	curl -sk https://dapi.${DOMAIN}/deploy/info/gateway/listid | while read id user_id blockchain network _remain; do
# 		if [ -z "$id" ]; then continue; fi
# 		echo "          - ${id}.gw.mbr.${DOMAIN}" $tmpd/${blockchain}-${network}.yml
# 		echo "          - ${id}.gw.mbr.${DOMAIN}" >>$tmpd/${blockchain}-${network}.yml
# 	done
# 	echo rm $_dir/stat_gw/*.yml
# 	rm $_dir/stat_gw/*.yml
# 	echo mv $tmpd/*.yml $_dir/stat_gw/
# 	cat $tmpd/*.yml
# 	mv $tmpd/*.yml $_dir/stat_gw/
# 	rm -rf $tmpd
# }
# _update_listid_node() {
# 	_dir=$SITE_ROOT/etc/prometheus
# 	mkdir -p $_dir/stat_node
# 	tmpd=$(mktemp -d)
# 	curl -sk https://dapi.${DOMAIN}/deploy/info/node/listid | while read id user_id blockchain network _remain; do
# 		if [ -z "$id" ]; then continue; fi
# 		echo "          - ${id}.node.mbr.${DOMAIN}" $tmpd/${blockchain}-${network}.yml
# 		echo "          - ${id}.node.mbr.${DOMAIN}" >>$tmpd/${blockchain}-${network}.yml
# 	done
# 	echo rm $_dir/stat_node/*.yml
# 	rm $_dir/stat_node/*.yml
# 	echo mv $tmpd/*.yml $_dir/stat_node/
# 	cat $tmpd/*.yml
# 	mv $tmpd/*.yml $_dir/stat_node/
# 	rm -rf $tmpd
# }
# _update_listid() {
# 	_update_listid_gw
# 	_update_listid_node
# }

_rebuild_conf() {
	#	_update_listid
	_dir=$SITE_ROOT/etc/conf

	cd $_dir

	_file_ok=$SITE_ROOT/etc/prometheus/stat_gw.yml
	_file=$(mktemp)
	cat $SITE_ROOT/etc/prometheus/_stat.yml >$_file
	_ftmp=$(mktemp)
	find stat_gw -type f -iname '*.yml' | while read f; do

		cat $SITE_ROOT/etc/prometheus/_stat.yml >$_ftmp
		cat $f >>$_ftmp
		echo >>$_ftmp
		mkdir -p $(dirname $SITE_ROOT/etc/prometheus/$f)
		mv $_ftmp $SITE_ROOT/etc/prometheus/$f

		cat $f >>$_file
		echo >>$_file
	done
	mv $_file $_file_ok

	_file_ok=$SITE_ROOT/etc/prometheus/stat_node.yml
	_file=$(mktemp)
	cat $SITE_ROOT/etc/prometheus/_stat.yml >$_file

	find stat_node -type f -iname '*.yml' | while read f; do

		cat $SITE_ROOT/etc/prometheus/_stat.yml >$_ftmp
		cat $f >>$_ftmp
		echo >>$_ftmp
		mkdir -p $(dirname $SITE_ROOT/etc/prometheus/$f)
		mv $_ftmp $SITE_ROOT/etc/prometheus/$f

		cat $f >>$_file
		echo >>$_file
	done
	mv $_file $_file_ok
	cd $SITE_ROOT
}

_reload() {
	bash $SITE_ROOT/etc/mkagent/push.sh _kill
	curl -X POST http://127.0.0.1:44448/__internal_prometheus_node/-/reload
	curl -X POST http://127.0.0.1:44449/__internal_prometheus_gw/-/reload
	_sc=$(mktemp)
	awk '/proxy_pass.*__internal_prometheus/{sub(/;$/,"",$2);print "curl -s -X POST",$2"-/reload"}' $SITE_ROOT/data/run/conf/*.conf >$_sc
	bash $_sc
	cat $_sc
	rm $_sc
	$SITE_ROOT/cmd_server _update
}

_update_repos() {
	_git_config
	_repo
	_update_sources $REPOS
	_st_repo=$?
	return $_st_repo
}

_update() {
	echo "Update"
	_update_repos
	_st_update=$?
	_rebuild_conf
	cat /etc/hosts >/tmp/hosts
	curl -s https://dapi.$DOMAIN/deploy/info/hosts >/tmp/hosts.1
	if [ -f "/tmp/hosts.1" ]; then
		cat /tmp/hosts.1 >>/tmp/hosts
		rm /tmp/hosts.1
	fi
	return $_st_update
}

_monitor() {
	echo mbr-stat >vars/TYPE

	_update
	is_reload=$?

	if [ $is_reload -ne 0 ]; then
		$0 _reload
	fi
}

_run() {
	rm -rf $SITE_ROOT/tmp/*
	$SITE_ROOT/start_server
}

$@
